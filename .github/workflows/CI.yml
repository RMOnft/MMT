name: Integration Tests

on: [push, workflow_dispatch]

env:
  SCALA_VERSION: '2.13.4'
  JAVA_VERSION: 'openjdk@1.14'

jobs:
  ci:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Java (${{ env.JAVA_VERSION }}) and Scala (${{ env.SCALA_VERSION }})
        uses: olafurpg/setup-scala@v11
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download MMT dependencies using 'sbt update'
        run: |
          cd src
          sbt ++${{ env.SCALA_VERSION }} update

      - name: Build 'mmt.jar' using 'sbt deploy'
        run: |
          cd src
          sbt ++${{ env.SCALA_VERSION }} deploy

      - name: Store 'mmt.jar' artifact
        uses: actions/upload-artifact@v2
        with:
          name: mmt.jar
          path: ./deploy/mmt.jar

      - name: Run Unit Tests
        run: |
          cd src
          sbt ++${{ env.SCALA_VERSION }} test
      
      - name: Use 'devel' version for MMT Archives
        run: |
          echo "MMT_ARCHIVE_VERSION=devel" >> $GITHUB_ENV
        if: "!startsWith(github.ref, 'refs/heads/master')"
      
      - name: Use 'master' version for MMT Archives
        run: |
          echo "MMT_ARCHIVE_VERSION=master" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/heads/master')
      
      - name: Run MMT Setup and store root directory
        id: setup
        run: |
          java -jar ./deploy/mmt.jar :setup --auto --auto --no-content --no-jedit
          echo "MMT_ARCHIVE_ROOT=../MMT-content" >> $GITHUB_ENV

      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MMT/urtheories'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
      
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MMT/examples'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
      
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MMT/LATIN2'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
          
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MMT/LFX'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
          
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'Test/General'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
          
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MitM/Foundation'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
          
      - name: Test '${{ env.MMT_ARCHIVE }}'
        if: always() && steps.setup.outcome == 'success'
        env:
          MMT_ARCHIVE: 'MitM/Core'
        run: |
          java -jar ./deploy/mmt.jar lmh install ${{ env.MMT_ARCHIVE }}@${{ env.MMT_ARCHIVE_VERSION }}
          java -jar ./deploy/mmt.jar :file ${{ env.MMT_ARCHIVE_ROOT }}/${{ env.MMT_ARCHIVE }}/build.msl
